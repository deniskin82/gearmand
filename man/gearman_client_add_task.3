.\" Man page generated from reStructuredText.
.
.TH "GEARMAN_CLIENT_ADD_TASK" "3" "February 11, 2014" "1.1.12" "Gearmand"
.SH NAME
gearman_client_add_task \- Gearmand Documentation, http://gearman.info/
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
#include <libgearman/gearman.h>
.INDENT 0.0
.TP
.B gearman_task_st *gearman_client_add_task(gearman_client_st\fI\ *client\fP, gearman_task_st\fI\ *task\fP, void\fI\ *context\fP, const char\fI\ *function_name\fP, const char\fI\ *unique\fP, const void\fI\ *workload\fP, size_t\fI\ workload_size\fP, gearman_return_t\fI\ *ret_ptr\fP)
.UNINDENT
.INDENT 0.0
.TP
.B gearman_task_st *gearman_client_add_task_high(gearman_client_st\fI\ *client\fP, gearman_task_st\fI\ *task\fP, void\fI\ *context\fP, const char\fI\ *function_name\fP, const char\fI\ *unique\fP, const void\fI\ *workload\fP, size_t\fI\ workload_size\fP, gearman_return_t\fI\ *ret_ptr\fP)
.UNINDENT
.INDENT 0.0
.TP
.B gearman_task_st *gearman_client_add_task_low(gearman_client_st\fI\ *client\fP, gearman_task_st\fI\ *task\fP, void\fI\ *context\fP, const char\fI\ *function_name\fP, const char\fI\ *unique\fP, const void\fI\ *workload\fP, size_t\fI\ workload_size\fP, gearman_return_t\fI\ *ret_ptr\fP)
.UNINDENT
.sp
Link with \-lgearman
.SH DESCRIPTION
.sp
\fI\%gearman_client_add_task()\fP creates a task and adds it to the given \fBgearman_client_st\fP\&. Execution of the task does now begin until \fBgearman_client_run_tasks()\fP is called.
.sp
If the unique value is not set, then a unique will be assigned.
.sp
\fI\%gearman_client_add_task_high()\fP and \fI\%gearman_client_add_task_low()\fP are identical to \fBgearman_client_do()\fP, only they set the priority to either high or low.
.SH RETURN VALUE
.sp
The \fBgearman_task_st\fP is created and a pointer to it is returned. On error NULL is returned and ret_ptr is set with a \fBgearman_return_t\fP\&.
.SH HOME
.sp
To find out more information please check:
\fI\%http://gearman.info/\fP
.INDENT 0.0
.INDENT 3.5
.IP "See also"
.sp
\fIgearmand(8)\fP \fIlibgearman(3)\fP
.UNINDENT
.UNINDENT
.SH AUTHOR
Data Differential http://www.datadifferential.com/
.SH COPYRIGHT
2011-2013, Data Differential, http://www.datadifferential.com/
.\" Generated by docutils manpage writer.
.
